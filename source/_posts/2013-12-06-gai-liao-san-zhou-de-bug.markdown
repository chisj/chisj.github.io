---
layout: post
title: "改了三周的bug"
date: 2013-12-06 17:26:54 +0800
comments: true
categories: 
---
过去的三周，我基本上是在解决91执行的bug，很多很多的bug，五六十个吧，当它们被标记为closed之后，我甚至都不愿再看。

为什么会有这么多bug！！

我看着这些一年前的代码，写得真是烂：厚重的controller层、经常性的大段重复、不恰当的单例模式，不敢相信文件头里都写这create by csj， 2012。有时候，在修修补补的时候，我感觉自己快搞不定这些东西了，或许应该请求支援。

但是看看安卓端的太伟一个人默默地翻着他的eclipse，我又坚持下来了，不能给队友看到我崩溃的样子啊，怕影响他幼小心灵。

今天下班前把程序包提交给iTunes Connect，再打一个助手包给运营的哥们，然后可以刷网易新闻了，边刷边想，这TMD，才这么点bug，差点把自己搞趴下。

不过计划3天搞定的事情，来来回回搞了3周，总是不太好，这件破事，得给自己一个说法。

需求经常有前后彻底变化的，这里的变化不是说红色变蓝色，加一个按钮少一个页面这样的东西，很多东西是反着的。并且正反面来回变，翻来覆去地变，有时候不得不去想是不是策划在耍程序员。

说到这里有的产品经理不乐意了，估计他们只把自己想法的百分之一做成了设计稿，还想怎么样！他们甚至承诺再改需求就剁手。（笑）

当然当然，如果需求不变，就不需要请我这样幽默而又有才华的程序员来写代码了，我们确实需要结构良好，方便扩展，经得起来回蹂躏的代码，怪不得惠阳哥哥经常说程序员的基本属性就是耐操。

我真想穿越到一年前的自己身边，用手指指着当时的自己问：你自己看看这些代码！你看看你这写代码的态度！你耐操吗！

所以问题一定在自己身上，代码质量其实也遵守一定的能量守恒定律的，如果写的时候专注得不够，就不得不在后面维护的时候付出更多来弥补。而且，需要付出的能量也和房价一样，随时间恐怖地增长。

不过我越来越感觉到，专注也并不是一整个上午坐在显示器前疯狂打字，跟策划，交互，美术和QA四个角色的沟通真是越来越重要了，网上的读者体文章都说过，你对自己当前所做事情的理解越深，你就越接近于一个超级程序员。

总之，代码需要更好的结构，但每天和其他其他几个职位的同事交流感情似乎更加重要，我是认真考虑这种事情的，我打算下一个项目里我每天都抽出固定的时间来分别问他们三个问题，即使问一下他们的手机是否升级到了最近版本的系统也不错！